// <auto-generated />
using System;
using Gesbanc.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Gesbanc.Infrastructure.Migrations
{
    [DbContext(typeof(GesbancContext))]
    partial class GesbancContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Gesbanc.Model.Entities.EntidadEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodPostal");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateUpdated");

                    b.Property<bool>("Estado_Activo");

                    b.Property<int>("GrupoEntidadId");

                    b.Property<string>("Logo");

                    b.Property<string>("Mail");

                    b.Property<string>("Nombre");

                    b.Property<string>("Pais");

                    b.Property<string>("Poblacion");

                    b.Property<string>("Provincia");

                    b.Property<string>("Telefono");

                    b.HasKey("Id");

                    b.HasIndex("GrupoEntidadId");

                    b.ToTable("Entidad");
                });

            modelBuilder.Entity("Gesbanc.Model.Entities.GrupoEntidadEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Color");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateUpdated");

                    b.Property<string>("Nombre");

                    b.HasKey("Id");

                    b.ToTable("GrupoEntidad");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Color = "Azul",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Sabadell"
                        },
                        new
                        {
                            Id = 2,
                            Color = "Verde",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Bankia"
                        });
                });

            modelBuilder.Entity("Gesbanc.Model.Entities.UserEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(true);

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateUpdated");

                    b.Property<string>("Password");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Password = "098f6bcd4621d373cade4e832627b4f6",
                            Username = "test"
                        },
                        new
                        {
                            Id = 2,
                            Active = false,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Password = "098f6bcd4621d373cade4e832627b4f6",
                            Username = "test2"
                        });
                });

            modelBuilder.Entity("Gesbanc.Model.Entities.EntidadEntity", b =>
                {
                    b.HasOne("Gesbanc.Model.Entities.GrupoEntidadEntity", "GrupoEntidad")
                        .WithMany("Entidad")
                        .HasForeignKey("GrupoEntidadId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
